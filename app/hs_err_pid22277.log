#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 103284736 bytes for committing reserved memory.
# Possible reasons:
#   The system is out of physical RAM or swap space
#   In 32 bit mode, the process size limit was hit
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Use 64 bit Java on a 64 bit OS
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (os_linux.cpp:2627), pid=22277, tid=139963991586560
#
# JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode linux-amd64 compressed oops)
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#

---------------  T H R E A D  ---------------

Current thread (0x00007f4c00078000):  VMThread [stack: 0x00007f4be7eff000,0x00007f4be8000000] [id=22287]

Stack: [0x00007f4be7eff000,0x00007f4be8000000],  sp=0x00007f4be7ffe2e0,  free space=1020k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0xab97ea]  VMError::report_and_die()+0x2ba
V  [libjvm.so+0x4f9dab]  report_vm_out_of_memory(char const*, int, unsigned long, VMErrorType, char const*)+0x8b
V  [libjvm.so+0x91a7c3]  os::Linux::commit_memory_impl(char*, unsigned long, bool)+0x103
V  [libjvm.so+0x91ad19]  os::pd_commit_memory(char*, unsigned long, unsigned long, bool)+0x29
V  [libjvm.so+0x91502a]  os::commit_memory(char*, unsigned long, unsigned long, bool)+0x2a
V  [libjvm.so+0x9886d3]  PSVirtualSpace::expand_by(unsigned long)+0x53
V  [libjvm.so+0x978fc0]  PSOldGen::expand(unsigned long)+0x170
V  [libjvm.so+0x9791cb]  PSOldGen::resize(unsigned long)+0x1cb
V  [libjvm.so+0x980ea1]  PSParallelCompact::invoke_no_policy(bool)+0x991
V  [libjvm.so+0x9867fd]  PSScavenge::invoke()+0x1ad
V  [libjvm.so+0x93e430]  ParallelScavengeHeap::failed_mem_allocate(unsigned long)+0x70
V  [libjvm.so+0xabb207]  VM_ParallelGCFailedAllocation::doit()+0x97
V  [libjvm.so+0xac2c35]  VM_Operation::evaluate()+0x55
V  [libjvm.so+0xac100a]  VMThread::evaluate_operation(VM_Operation*)+0xba
V  [libjvm.so+0xac138e]  VMThread::loop()+0x1ce
V  [libjvm.so+0xac1800]  VMThread::run()+0x70
V  [libjvm.so+0x91cb88]  java_start(Thread*)+0x108

VM_Operation (0x00007f4c067a2440): ParallelGCFailedAllocation, mode: safepoint, requested by thread 0x00007f4c0000a000


---------------  P R O C E S S  ---------------

Java Threads: ( => current thread )
  0x00007f4c00191800 JavaThread "pool-2-thread-4" [_thread_blocked, id=22300, stack(0x00007f4be69df000,0x00007f4be6ae0000)]
  0x00007f4c00190000 JavaThread "pool-2-thread-3" [_thread_blocked, id=22299, stack(0x00007f4be6ae0000,0x00007f4be6be1000)]
  0x00007f4c0018e800 JavaThread "pool-2-thread-2" [_thread_blocked, id=22298, stack(0x00007f4be6be1000,0x00007f4be6ce2000)]
  0x00007f4c0018d800 